     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [BITS 32]
     4 00000000                                 [FILE "app_nask.nas"]
     5 00000000                                 
     6 00000000                                 	; System
     7 00000000                                 	GLOBAL 	_api_memory_init
     8 00000000                                 	GLOBAL  _api_malloc
     9 00000000                                 	GLOBAL  _api_free
    10 00000000                                 	GLOBAL	_api_end
    11 00000000                                 	GLOBAL 	_api_getkey
    12 00000000                                 
    13 00000000                                 	; Console
    14 00000000                                 	GLOBAL  _api_putchar
    15 00000000                                 	GLOBAL  _api_print
    16 00000000                                 
    17 00000000                                 	; GUI
    18 00000000                                 	GLOBAL	_api_win_open
    19 00000000                                 	GLOBAL  _api_win_close
    20 00000000                                 	GLOBAL  _api_win_print
    21 00000000                                 	GLOBAL  _api_win_boxfill
    22 00000000                                 	GLOBAL 	_api_win_dw_point
    23 00000000                                 	GLOBAL  _api_win_dw_line
    24 00000000                                 	GLOBAL  _api_win_refresh_sub
    25 00000000                                 
    26 00000000                                 	; Timers
    27 00000000                                 	GLOBAL  _api_timer_alloc
    28 00000000                                 	GLOBAL  _api_timer_init
    29 00000000                                 	GLOBAL  _api_timer_countdown
    30 00000000                                 	GLOBAL	_api_timer_free
    31 00000000                                 
    32 00000000                                 	; Sound
    33 00000000                                 	GLOBAL 	_api_beep
    34 00000000                                 
    35                                          [SECTION .text]
    36 00000000                                 
    37 00000000                                 _api_win_open: ; void api_win_open(int xsize, int ysize, int icol, char *title)
    38 00000000 57                              	PUSH	EDI
    39 00000001 56                              	PUSH  ESI
    40 00000002 53                              	PUSH	EBX
    41 00000003 BA 00000003                     	MOV		EDX, 3
    42 00000008 8B 5C 24 0C                     	MOV		EBX, [ESP + 12]
    43 0000000C 8B 74 24 10                     	MOV		ESI, [ESP + 16]
    44 00000010 8B 7C 24 14                     	MOV		EDI, [ESP + 20]
    45 00000014 8B 44 24 18                     	MOV		EAX, [ESP + 24]
    46 00000018 8B 4C 24 1C                     	MOV		ECX, [ESP + 28]
    47 0000001C CD 40                           	INT		0x40
    48 0000001E 5B                              	POP		EBX
    49 0000001F 5E                              	POP		ESI
    50 00000020 5F                              	POP		EDI
    51 00000021 C3                              	RET
    52 00000022                                 
    53 00000022                                 _api_win_close: ; void api_win_close(int win)
    54 00000022 53                              	PUSH	EBX
    55 00000023 BA 0000000C                     	MOV		EDX, 12
    56 00000028 8B 5C 24 08                     	MOV		EBX, [ESP + 8]
    57 0000002C CD 40                           	INT		0x40
    58 0000002E 5B                              	POP		EBX
    59 0000002F C3                              	RET
    60 00000030                                 
    61 00000030                                 _api_win_print: ; void api_win_print(int win, int x, int y, int col, int len, char *str);
    62 00000030 57                              	PUSH 	EDI
    63 00000031 56                              	PUSH	ESI
    64 00000032 55                              	PUSH	EBP
    65 00000033 53                              	PUSH	EBX
    66 00000034 BA 00000004                     	MOV		EDX, 4
    67 00000039 8B 5C 24 14                     	MOV		EBX, [ESP + 20]
    68 0000003D 8B 74 24 18                     	MOV		ESI, [ESP + 24]
    69 00000041 8B 7C 24 1C                     	MOV		EDI, [ESP + 28]
    70 00000045 8B 44 24 20                     	MOV		EAX, [ESP + 32]
    71 00000049 8B 4C 24 24                     	MOV		ECX, [ESP + 36]
    72 0000004D 8B 6C 24 28                     	MOV		EBP, [ESP + 40]
    73 00000051 CD 40                           	INT		0x40
    74 00000053 5B                              	POP		EBX
    75 00000054 5D                              	POP		EBP
    76 00000055 5E                              	POP		ESI
    77 00000056 5F                              	POP		EDI
    78 00000057 C3                              	RET
    79 00000058                                 
    80 00000058                                 _api_win_boxfill: ; void api_win_boxfill(int win, int x0, int y0, int x1, int y1, int col);
    81 00000058 57                              	PUSH 	EDI
    82 00000059 56                              	PUSH	ESI
    83 0000005A 55                              	PUSH	EBP
    84 0000005B 53                              	PUSH	EBX
    85 0000005C BA 00000005                     	MOV		EDX, 5
    86 00000061 8B 5C 24 14                     	MOV		EBX, [ESP + 20]
    87 00000065 8B 44 24 18                     	MOV		EAX, [ESP + 24]
    88 00000069 8B 4C 24 1C                     	MOV		ECX, [ESP + 28]
    89 0000006D 8B 74 24 20                     	MOV		ESI, [ESP + 32]
    90 00000071 8B 7C 24 24                     	MOV		EDI, [ESP + 36]
    91 00000075 8B 6C 24 28                     	MOV		EBP, [ESP + 40]
    92 00000079 CD 40                           	INT		0x40
    93 0000007B 5B                              	POP		EBX
    94 0000007C 5D                              	POP		EBP
    95 0000007D 5E                              	POP		ESI
    96 0000007E 5F                              	POP		EDI
    97 0000007F C3                              	RET
    98 00000080                                 
    99 00000080                                 _api_win_dw_line: ; void api_win_dw_line(int win, int x0, int y0, int x1, int y1, int col)
   100 00000080 57                              	PUSH	EDI
   101 00000081 56                              	PUSH	ESI
   102 00000082 55                              	PUSH	EBP
   103 00000083 53                              	PUSH	EBX
   104 00000084 BA 0000000B                     	MOV		EDX, 11
   105 00000089 8B 5C 24 14                     	MOV		EBX, [ESP + 20]
   106 0000008D 8B 44 24 18                     	MOV		EAX, [ESP + 24]
   107 00000091 8B 4C 24 1C                     	MOV		ECX, [ESP + 28]
   108 00000095 8B 74 24 20                     	MOV		ESI, [ESP + 32]
   109 00000099 8B 7C 24 24                     	MOV		EDI, [ESP + 36]
   110 0000009D 8B 6C 24 28                     	MOV		EBP, [ESP + 40]
   111 000000A1 CD 40                           	INT		0x40
   112 000000A3 5B                              	POP		EBX
   113 000000A4 5D                              	POP		EBP
   114 000000A5 5E                              	POP		ESI
   115 000000A6 5F                              	POP		EDI
   116 000000A7 C3                              	RET
   117 000000A8                                 
   118 000000A8                                 _api_win_dw_point: ;void api_win_dw_point(int win, int x, int y, int col)
   119 000000A8 57                              	PUSH	EDI
   120 000000A9 56                              	PUSH	ESI
   121 000000AA 53                              	PUSH	EBX
   122 000000AB BA 00000009                     	MOV		EDX, 9
   123 000000B0 8B 5C 24 10                     	MOV		EBX, [ESP + 16]
   124 000000B4 8B 74 24 14                     	MOV		ESI, [ESP + 20]
   125 000000B8 8B 7C 24 18                     	MOV		EDI, [ESP + 24]
   126 000000BC 8B 44 24 1C                     	MOV		EAX, [ESP + 28]
   127 000000C0 CD 40                           	INT		0x40
   128 000000C2 5B                              	POP		EBX
   129 000000C3 5E                              	POP		ESI
   130 000000C4 5F                              	POP		EDI
   131 000000C5 C3                              	RET
   132 000000C6                                 
   133 000000C6                                 _api_print:  ; void api_print(char *str)
   134 000000C6 53                              	PUSH	EBX
   135 000000C7 BA 00000002                     	MOV		EDX, 2
   136 000000CC 8B 5C 24 08                     	MOV		EBX, [ESP + 8]
   137 000000D0 CD 40                           	INT		0x40
   138 000000D2 5B                              	POP		EBX
   139 000000D3 C3                              	RET
   140 000000D4                                 
   141 000000D4                                 _api_putchar:	; void api_putchar(char c)
   142 000000D4 BA 00000001                     	MOV		EDX, 1
   143 000000D9 8A 44 24 04                     	MOV		AL, [ESP + 4]
   144 000000DD CD 40                           	INT    	0x40
   145 000000DF C3                              	RET
   146 000000E0                                 
   147 000000E0                                 _api_memory_init: ;void api_memory_init(void)
   148 000000E0 53                              	PUSH	EBX
   149 000000E1 BA 00000006                     	MOV		EDX, 6
   150 000000E6 2E 8B 1D 00000020               	MOV		EBX, [CS:0x0020]
   151 000000ED 89 D8                           	MOV		EAX, EBX
   152 000000EF 05 00008000                     	ADD		EAX, 32 * 1024
   153 000000F4 2E 8B 0D 00000000               	MOV		ECX, [CS:0x0000]
   154 000000FB 29 C1                           	SUB		ECX, EAX
   155 000000FD CD 40                           	INT		0x40
   156 000000FF 5B                              	POP		EBX
   157 00000100 C3                              	RET
   158 00000101                                 
   159 00000101                                 _api_malloc: ;char* api_malloc(int size)
   160 00000101 53                              	PUSH	EBX
   161 00000102 BA 00000007                     	MOV		EDX, 7
   162 00000107 2E 8B 1D 00000020               	MOV		EBX, [CS:0x0020]
   163 0000010E 8B 4C 24 08                     	MOV		ECX, [ESP + 8]
   164 00000112 CD 40                           	INT		0x40
   165 00000114 5B                              	POP		EBX
   166 00000115 C3                              	RET
   167 00000116                                 
   168 00000116                                 _api_win_refresh_sub: ; void api_win_refresh_sub(int win, int x0, int y0, int x1, int y1)
   169 00000116 57                              	PUSH	EDI
   170 00000117 56                              	PUSH	ESI
   171 00000118 53                              	PUSH	EBX
   172 00000119 BA 0000000A                     	MOV		EDX, 10
   173 0000011E 8B 5C 24 10                     	MOV		EBX, [ESP + 16]
   174 00000122 8B 44 24 14                     	MOV		EAX, [ESP + 20]
   175 00000126 8B 4C 24 18                     	MOV		ECX, [ESP + 24]
   176 0000012A 8B 74 24 1C                     	MOV		ESI, [ESP + 28]
   177 0000012E 8B 7C 24 20                     	MOV		EDI, [ESP + 32]
   178 00000132 CD 40                           	INT		0x40
   179 00000134 5B                              	POP		EBX
   180 00000135 5E                              	POP		ESI
   181 00000136 5F                              	POP		EDI
   182 00000137 C3                              	RET
   183 00000138                                 
   184 00000138                                 _api_free: ; void api_free(char *addr, int size)
   185 00000138 53                              	PUSH	EBX
   186 00000139 BA 00000008                     	MOV		EDX, 8
   187 0000013E 2E 8B 1D 00000020               	MOV		EBX, [CS:0x0020]
   188 00000145 8B 44 24 08                     	MOV		EAX, [ESP + 8]
   189 00000149 8B 4C 24 0C                     	MOV		ECX, [ESP + 12]
   190 0000014D CD 40                           	INT 	0x40
   191 0000014F 5B                              	POP		EBX
   192 00000150 C3                              	RET
   193 00000151                                 
   194 00000151                                 _api_getkey:	; int api_getkey(int mode)
   195 00000151 BA 0000000D                     	MOV		EDX, 13
   196 00000156 8B 44 24 04                     	MOV		EAX, [ESP + 4]
   197 0000015A CD 40                           	INT		0x40
   198 0000015C C3                              	RET
   199 0000015D                                 
   200 0000015D                                 _api_end:	; void api_end(void)
   201 0000015D BA 00000000                     	MOV		EDX, 0
   202 00000162 CD 40                           	INT		0x40
   203 00000164                                 
   204 00000164                                 _api_timer_alloc:      ; int api_timer_alloc(void);
   205 00000164 BA 0000000E                     	MOV		EDX, 14
   206 00000169 CD 40                           	INT		0x40
   207 0000016B C3                              	RET
   208 0000016C                                 
   209 0000016C                                 _api_timer_init:   		 ; void api_timer_init(int timer, int data);
   210 0000016C 53                              	PUSH	EBX
   211 0000016D BA 0000000F                     	MOV		EDX, 15
   212 00000172 8B 5C 24 08                     	MOV		EBX, [ESP + 8]
   213 00000176 8B 44 24 0C                     	MOV		EAX, [ESP + 12]
   214 0000017A CD 40                           	INT 	0x40
   215 0000017C 5B                              	POP		EBX
   216 0000017D C3                              	RET
   217 0000017E                                 
   218 0000017E                                 _api_timer_countdown:  ; void api_timer_countdown(int timer, int time);
   219 0000017E 53                              	PUSH	EBX
   220 0000017F BA 00000010                     	MOV		EDX, 16
   221 00000184 8B 5C 24 08                     	MOV 	EBX, [ESP + 8]
   222 00000188 8B 44 24 0C                     	MOV		EAX, [ESP + 12]
   223 0000018C CD 40                           	INT 	0x40
   224 0000018E 5B                              	POP		EBX
   225 0000018F C3                              	RET
   226 00000190                                 
   227 00000190                                 _api_timer_free:			 ; void api_timer_free(int timer);
   228 00000190 53                              	PUSH	EBX
   229 00000191 BA 00000011                     	MOV		EDX, 17
   230 00000196 8B 5C 24 08                     	MOV		EBX, [ESP + 8]
   231 0000019A CD 40                           	INT		0x40
   232 0000019C 5B                              	POP		EBX
   233 0000019D C3                              	RET
   234 0000019E                                 
   235 0000019E                                 _api_beep:	; void api_beep(int hz)
   236 0000019E BA 00000012                     	MOV		EDX, 18
   237 000001A3 8B 44 24 04                     	MOV		EAX, [ESP + 4]
   238 000001A7 CD 40                           	INT 	0x40
   239 000001A9 C3                              	RET
